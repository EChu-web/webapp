@import "constants.scss";

.spinner
{
	width  : 2em;
	height : 2em;

	stroke : var(--black-color);

	svg
	{
		animation: spinner-rotate 2s linear infinite;
		transform-origin: center center;
	}

	circle
	{
		stroke-dasharray  : 1,200;
		stroke-dashoffset : 0;
		animation: spinner-extent 1.5s ease-in-out infinite;
		stroke-linecap: round;
	}
}

@keyframes spinner-rotate
{
	100%
	{
		transform: rotate(360deg);
	}
}

@keyframes spinner-extent
{
	0%
	{
		stroke-dasharray  : 1,200;
		stroke-dashoffset : 0;
	}

	50%
	{
		stroke-dasharray  : 89,200;
		stroke-dashoffset : -35;
	}

	100%
	{
		stroke-dasharray  : 89,200;
		stroke-dashoffset : -124;
	}
}

.dropdown
{
	color: black;
}

.dropdown-item-list
{
	transition-property        : max-height, border-color, box-shadow, opacity;
	transition-duration        : 0ms; // don't animate short lists
	transition-timing-function : ease-out;

	// border-width : 1px;
	// border-style : solid;
	// border-color : transparent;

	opacity: 0; // 0.85;

	// prevent white background showing through the transparent border
	// http://stackoverflow.com/questions/7473200/transparent-border-expands-background-color-image
	background-clip: padding-box;
	// for Safari
	-webkit-background-clip: padding-box;

    overflow-y: auto;
}

.dropdown-item-list-simple-left-aligned
{
	left: calc(-1 * var(--dropdown-item-horizontal-padding)) !important;
}

.dropdown-item-list-simple-right-aligned
{
	right : calc(-1 * var(--dropdown-item-horizontal-padding)) !important;
}

.dropdown-item-list-expanded
{
	// border-color : #e7e7e7;

	opacity: 1;
}

.dropdown-item
{
	width: 100%;

	padding-left  : var(--dropdown-item-horizontal-padding);
	padding-right : var(--dropdown-item-horizontal-padding);

	padding-top    : var(--dropdown-item-vertical-padding);
	padding-bottom : var(--dropdown-item-vertical-padding);

	box-sizing: border-box;

	text-align: left;

	&:active
	{
		background-color: var(--gray-color-lighter);
	}
}

.dropdown-separator
{
	height: var(--input-separator-width);
	padding: 0;
	font-size: 0;
	background-color: var(--gray-color);
}

.dropdown-item-list
{
	transform: scaleY(0);
	transform-origin: 50% top 0px;

	// 250ms - too slow for short lists
	transition: all 150ms cubic-bezier(.76,.04,.46,.75) 0ms;
	
	li
	{
		opacity: 0;

		// mitigates list labels overlapping with the underlying text creating a feeling of a mess
		transition: opacity 150ms ease-out;
	}
}

.dropdown-upward .dropdown-item-list
{
	transform-origin: 50% bottom 0px;
}

.dropdown-item-list-expanded
{
	transform: scaleY(1);
	transform-origin: 50% top 0px;

	transition: all 150ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;

	li
	{
		opacity: 1;
	}
}

.dropdown-item-selected-in-list
{
	background-color: var(--gray-color-lighter);
}

.dropdown-item-list
{
	> li:first-child
	{
		padding-top    : calc(2 * var(--dropdown-item-vertical-padding));
	}

	> li:last-child
	{
		padding-bottom : calc(2 * var(--dropdown-item-vertical-padding));
	}
}

.dropdown-item-selected
{
	padding-top    : var(--input-padding);
	padding-bottom : var(--input-padding);
	margin-bottom  : calc(-1 * var(--input-border-width));

	border: none;
	border-bottom: var(--input-border-width) solid var(--gray-color-light);
	transition: border 0.1s;
}

.dropdown-item-selected-nothing
{
	color: var(--gray-color-darker) !important;
}

.dropdown-item, .dropdown-item-selected
{
	color: inherit;
	font-weight: normal;

	&:active
	{
		color: var(--base-color-darker);
	}
}

.dropdown-expanded .dropdown-item-selected
{
	color: var(--base-color-darker);
}

.dropdown-arrow
{
	color: var(--gray-color);
}

// https://css-tricks.com/three-line-menu-navicon/

// .menu-button
// {
// 	display: none;

// 	&:active
// 	{
// 		.menu-icon:before
// 		{
// 			border-color: $header-text-color-active;
// 		}
// 	}
// }

.language-wrapper
{
	position: absolute;
	top   : 0;
	right : 0;

	height: 100%;

	// centers children vertically
	display     : flex;
	align-items : center;
}

.language
{
	margin-top: 0.1em;
	margin-right: 1.5em;

	.dropdown
	{
		text-align: right !important;
	}

	.dropdown-item-selected
	{
		border: none;
	}
}

// http://tympanus.net/codrops/2013/10/15/animated-checkboxes-and-radio-buttons-with-svg/

.checkbox path
{
	stroke: var(--base-color-darker) !important;
	stroke-width: 0.6em !important;
}

.checkbox input:active + .checkbox-border
{
	border-color: var(--base-color-darker) !important;
}

.checkbox-label:active
{
	color: var(--base-color-darker) !important;
}

.checkbox-invalid .checkbox-border
{
	border-color: var(--error-color) !important;
}

.user-info
{
	display         : flex;
	flex-direction  : row;
	justify-content : center;

	min-height : 100%;
	max-height : 100%;
	height : 100%;
}

.user-name
{
	// centers <a/> vertically
	display         : flex;
	flex-direction  : column;
	justify-content : center;

	margin-right: 0.8em;

	margin-top: var(--header-vertically-centered-text-margin-top);
}

header > .nav-widescreen
{
	margin-top: var(--header-vertically-centered-text-margin-top);
}

.user-picture
{
	.spinner
	{
		stroke : var(--white-color);
	}
}

.user-picture--header
{
	border-left: 1px solid var(--base-color-darkest);
}

.user-profile .user-picture
{
	border-radius: var(--border-radius);
}

// .user-profile h1
// {
// }

.sign-in, .sign-out
{
	margin-top: var(--header-vertically-centered-text-margin-top);
	margin-right: 0.8em;
}

.sign-out-form
{
	// // centers children vertically
	// display         : flex;
	// flex-direction  : column;
	// justify-content : center;

	button
	{
		color: inherit;
	}
}

.user-bar
{
	position: absolute;
	top   : 0;
	right : 0;

	height: 100%;

	// centers children vertically
	display     : flex !important;
	align-items : center;
}

// styling react-modal dialog widget

// when changing css transition times here
// also change `default_close_timeout` in ./components/modal.js accordingly

.ReactModal__Overlay
{
	opacity: 0;
	overflow: auto;
}

.ReactModal__Overlay--after-open
{
	opacity: 1;
}

.ReactModal__Overlay--before-close
{
	opacity: 0;
}

.ReactModal__Overlay--after-open,
.ReactModal__Overlay--before-close
{
	transition: opacity 100ms ease-out;
}

.ReactModal__Content
{
	outline: none;
}

.ReactModal__Content // .modal-content
{
	transform: scale(0.8);
}

.ReactModal__Content--after-open // .modal-content
{
	transform: scale(1);
}

.ReactModal__Content--before-close // .modal-content
{
	transform: scale(0.8);
}

.ReactModal__Content--after-open, // .modal-content,
.ReactModal__Content--before-close // .modal-content
{
	transition: transform 120ms ease-out;
}

// hides `react-modal` scrollbar when closing the modal
.ReactModal__Overlay--before-close
{
	overflow: hidden;
}

// .ReactModal__Body--open
// {
// 	// disables page scrolling when modal is presented,
// 	// but introduces page width jumps.
// 	height: 100%;
// 	overflow: hidden;
// }

// end react-modal stying

.modal-header--separated
{
	border-bottom: 1px solid #e0e0e0;
}

.modal-actions--separated
{
	border-top: 1px solid #e0e0e0;
}

.modal-header
{
	padding-left   : calc(4 * var(--modular-grid-unit));
	padding-right  : calc(4 * var(--modular-grid-unit));
	padding-top    : calc(4 * var(--modular-grid-unit));
	padding-bottom : calc(3.5 * var(--modular-grid-unit));

	border-top-left-radius  : var(--card-border-radius);
	border-top-right-radius : var(--card-border-radius);
}

.modal-actions
{
	padding-left   : calc(4 * var(--modular-grid-unit));
	padding-right  : calc(1 * var(--modular-grid-unit));
	padding-top    : calc(1 * var(--modular-grid-unit));
	padding-bottom : calc(1 * var(--modular-grid-unit));

	border-bottom-left-radius  : var(--card-border-radius);
	border-bottom-right-radius : var(--card-border-radius);
}

.modal-content--no-bars
{
	padding-top   : calc(4 * var(--modular-grid-unit));
	border-radius : var(--card-border-radius);
}

.button-group
{
}

.button-group-button
{
	color            : var(--black-color);
	background-color : transparent;
	border : 0.1em solid var(--base-color-darker);

	&:active
	{
		color            : var(--white-color);
		background-color : var(--base-color);

		transition : none !important;
	}
}

.rich-fallback
{
	// revert the above :active style
	.button-group-button:active
	{
		color            : black;
		background-color : transparent;
	}

	.button-group-button input
	{
		margin-left: 0;
	}
}

.button-group-selected
{
	color            : var(--white-color);
	background-color : var(--base-color-darker);
}

.form-error-message
{
	margin-top: 1em;
	color: var(--error-color-darker);
}

.file-upload
{
	position: relative;
	width: 20em;

	.file-upload-button
	{
		float : left;

		height      : 3rem;
		line-height : 3rem;

		input
		{
			position : absolute;

			top    : 0;
			right  : 0;
			left   : 0;
			bottom : 0;

			width : 100%;

			margin  : 0;
			padding : 0;

			opacity : 0;
		}
	}

	.file-upload-list
	{
		overflow: hidden;
		padding-left: 0.6em;

		input
		{
			width: 100%;
			text-overflow: ellipsis;
		}
	}
}

.text-input-invalid .text-input-field
{
	border-bottom-color: var(--error-color);
}

.text-input-error-message
{
	padding-top: calc(2 * var(--input-padding));

	color: var(--error-color-darker);
}

.checkbox-error-message
{
	padding-top: var(--input-padding);

	color: var(--error-color-darker);
}

.preloading
{
	position: fixed;

	top    : 0;
	left   : 0;
	right  : 0;
	bottom : 0;

	// display: none; // breaks opacity transition
	z-index: -1;

	background-color: rgba(0, 0, 0, 0.1);

	opacity          : 0;
	transition       : opacity 100ms ease-out;
	transition-delay : 0;

	text-align: center;
}

.preloading--shown
{
	z-index : 1;

	opacity : 1;
	cursor  : wait;

	transition-duration : 140ms;
	transition-delay    : 500ms;
}

.preloading-spinner-container
{
	display: inline-block;

	position   : absolute;
	top        : 50%;
	margin-top : -1.17em;

	padding       : 0.35em;
	border-radius : 50%; // 0.5em;

	background: rgba(255, 255, 255, 0.8);

	box-shadow: 0 0 0.1em rgba(0, 0, 0, 0.2);

    line-height: 0;
}

.preloading .spinner
{
	// 2em x 2em
}

// e.g. <ul/> with errors in `pages/register.js`
.errors
{
	margin-top    : 0;
	margin-bottom : 0;

	color      : var(--error-color-darker);
	text-align : center;
}

.error
{
	color : var(--error-color-darker);
}

.user-profile
{
	input[type="text"]
	{
		width: 100%;
	}
}

.user-profile__last-seen
{
	color: var(--gray-color-darker);
}

.user-profile__actions
{
	.button:not(:first-child)
	{
		margin-left: 1em;
	}
}

.user-profile__picture__change__overlay
{
	background-color: var(--black-color);
}

.user-profile__picture
{
	transition: box-shadow 100ms ease-out;
}

.layout--dragging .user-profile__picture
{
	box-shadow: 0 0 0 0.15rem var(--accent-color-lighter);
}

.user-profile__picture__change__droppable-overlay
{
	transition: background-color 100ms ease-out;
}

.user-profile__picture__change__droppable-overlay--can-drop
{
	background-color: var(--accent-color-lighter);
}

.user-profile__picture__change__droppable-overlay--cannot-drop
{
	background-color: var(--error-color);
}

.form-actions
{
	margin-top: 1em;
	text-align: right;
}

.text-input
{
	display: flex;
	flex-direction: column;

	label
	{
		order: -2;

		color: var(--gray-color-dark);

		transform: scale(0.85) translateY(0.3em);
		transform-origin: left top;
		transition : color 0.1s ease-out, transform 0.1s ease-out;
		pointer-events : none;
	}

	input, textarea
	{
		order: -1;
	}

	input:focus + label, textarea:focus + label
	{
		color: var(--accent-color);
	}
}

.text-input-invalid
{
	label
	{
		color: var(--error-color-darker);
	}
}

.text-input-empty
{
	label
	{
		color: var(--gray-color-darker);
		transform: translateY(1.45em) scale(1);
	}

	input:focus + label, textarea:focus + label
	{
		color: var(--gray-color-darker);
	}
}

.initializing-react-application
{
	display : none;

	width        : 1em;
	height       : 1em;
	margin-right : 0.5em;

	opacity          : 0;
	transition       : opacity 100ms ease-out;
	transition-delay : 0;
	
	stroke : var(--white-color);
}

.initializing-react-application--enabled
{
	display: inline-block;
}

.initializing-react-application--shown
{
	opacity : 1;

	transition-duration : 140ms;
	transition-delay    : 500ms;
}